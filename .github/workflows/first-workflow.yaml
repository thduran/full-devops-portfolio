# defines name of the worflow
name: simple-workflow

# defines the trigger
on:
  push:
    branches: ["main"]

  workflow_dispatch: # allows to run workflow manually

jobs:
  # defines the job name
  hello-world-job:
    # defines the runner. It's needed after every job name
    runs-on: ubuntu-latest

    # defines the job steps
    steps:
      - name: Display Hello World
        run: echo "Hello World!"

      - name: Second action
        run: | # allows several commands in a single action
          echo "You created a worflow"
          echo "Congrats!"

      - name: Script Python
        run: |
          var = "Hi there"
          print(var)
        shell: python # allow to run python scripts
  
  node-installation-job:
   runs-on: ubuntu-latest
   needs: [hello-world-job] # defines job dependency
   steps:
     - name: Node JS version check
       run: node --version
     - name: Newest version installation
       uses: actions/setup-node@v6 # instead of running commands, we can call an action
       with:
         node-version: '22.21.0' # declaring node version we want. See action documentation
     - name: Node JS version check after update
       run: node --version

  CI:
    runs-on: ubuntu-latest
    steps:
    
    - name: Obtaining code
      uses: actions/checkout@v5 # when the workflow file is in the same directory of the code, the definition of code path isn't needed
    
    - name: Setup Go environment
      uses: actions/setup-go@v5 # ensures correct go version
      with:
        go-version: '1.22.x'
    
    - name: Install Go dependencies
      working-directory: ./git/day-02
      run: go mod download # downloads all dependencies listed in ./git/day-02/go.mod

    - name: Run tests
      working-directory: ./git/day-02
      run: go test ./... -v # ./git/day-02/main_test.go

    - name: Logging in to Docker
      uses: docker/login-action@v3.1.0
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v6
      with:
        context: ./git/day-02 # the directory you're working with
        file: ./git/day-02/Dockerfile # Dockerfile path
        push: true # to automatically push image to Hub. Default is false
        tags: |
          thiagoduran/github-actions-test:v${{ github.run_number }}
          thiagoduran/github-actions-test:latest
        # run_number ensures version number incrementation
        # ensures push of tag latest (best practice)
        
  CD:
    runs-on: ubuntu-latest
    needs: [CI] # ensures that CD job will be run after CI job
    steps:

    - name: Obtaining code
      uses: actions/checkout@v5
    
    - name: Configuring k8s context # action to set kubeconfig
      uses: azure/k8s-set-context@v4
      with:
        method: kubeconfig
        kubeconfig: ${{ secrets.k8s_config }} # the content of ~/.kube/config was set as a secret
        
    - name: Manifest execution
      uses: Azure/k8s-deploy@v5 # action to deploy app with k8s
      with:
        manifests: |
          ./git/day-03/k8s/deployment.yaml
        images: |
          thiagoduran/github-actions-test:v${{ github.run_number }}  
        # must match image set in k8s yaml